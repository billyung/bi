<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>TestCenterLoanOfficerChange</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>1000</size_rowset>
    <sleep_time_empty>1</sleep_time_empty>
    <sleep_time_full>1</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>5000</feedback_size>
    <using_thread_priorities>N</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <modified_user>-</modified_user>
  <modified_date>2007&#47;06&#47;07 12:04:59.781</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>Identifies the1st entry for the test customer 
that matches the test date and test change.

 </note>
      <xloc>17</xloc>
      <yloc>85</yloc>
      <width>226</width>
      <heigth>60</heigth>
      <fontname>Microsoft Sans Serif</fontname>
      <fontsize>8</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>DestinationDB</name>
    <server/>
    <type>MYSQL</type>
    <access>JNDI</access>
    <database>DestinationDB</database>
    <port>1521</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>SourceDB</name>
    <server/>
    <type>MYSQL</type>
    <access>JNDI</access>
    <database>SourceDB</database>
    <port>1521</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>wcm</name>
    <server>localhost</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>wcm</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce7dc781bed6</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>3306</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Set Test Variables</from><to>Get Customer Entries for Change Type</to><enabled>Y</enabled> </hop>  <hop> <from>Get Customer Entries for Change Type</from><to>Failed?</to><enabled>Y</enabled> </hop>  <hop> <from>Failed?</from><to>Select values</to><enabled>Y</enabled> </hop>  <hop> <from>Select values</from><to>Test Case</to><enabled>Y</enabled> </hop>  <hop> <from>Cascade Check</from><to>Select values 2</to><enabled>Y</enabled> </hop>  <hop> <from>Select values 2</from><to>Test Case</to><enabled>Y</enabled> </hop>  <hop> <from>Failed?</from><to>Remove Test pass&#47;fail info</to><enabled>Y</enabled> </hop>  <hop> <from>Remove Test pass&#47;fail info</from><to>Cascade Check</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Cascade Check</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
function fail_test(msg)
{
	test_result = &quot;Fail&quot;;
	fail_reason = msg;
	wasError = &quot;Y&quot;;
}

function test_results(dim_type)
{

&#47;&#47;each dim_customer&#47;loan&#47;savings entry linked to the changed entry at the time of the change (including itself) must get a new entry
&#47;&#47;the tests are: 
&#47;&#47;same number of entries before change as after
&#47;&#47;each customer&#47;loan_account&#47;savings_account id only appears once
&#47;&#47;id must be the same, key must be different

	if (changedResults.length != previousResults.length)
	{
		fail_test(&quot;Number of Changed &quot; + dim_type + &quot; Entries: &quot; +  changedResults.length + &quot; doesn&apos;t match Number of Previous &quot; + dim_type + &quot; Entries: &quot; + previousResults.length);
		return;
	}

	for (var i in changedResults){

    	if (i &gt; 0)
		{
    		if (changedResults[i][0] == changedResults[i - 1][0])
			{
				fail_test(dim_type + &quot; Id: &quot; + changedResults[i][0] + &quot; In Changed Resultset More than Once&quot;);
				return;
			}
		}


    	if (changedResults[i][0] != previousResults[i][0])
		{
			fail_test(dim_type + &quot; Ids don&apos;t match: Changed: &quot; + changedResults[i][0] + &quot; Previous: &quot; + previousResults[i][0]);
			return;

		}

    	if (changedResults[i][1] == previousResults[i][1])
		{
			fail_test(dim_type + &quot; Keys are not different: Changed: &quot; + changedResults[i][1] + &quot; Previous: &quot; + previousResults[i][1]);
			return;
		}

	}
}

var test_result = &quot;Pass&quot;;
var fail_reason = &quot;&quot;;


var DBConnection = &quot;DestinationDB&quot;;
var wasError = &quot;N&quot;;

int_customer_level_id = parseInt(customer_level_id);

switch(int_customer_level_id)
{
case 1:
  level_key_name = &quot;customer_key&quot;;
  break;
case 2:
  level_key_name = &quot;group_key&quot;;
  break;
case 3:
  level_key_name = &quot;center_key&quot;;
  break;
default:
  level_key_name = &quot;Unknown customer level: &quot; + customer_level_id;
}


var sqlCustomerChanged = &quot;select customer_id, customer_key from dim_customer where &quot; + level_key_name + &quot; = &quot; + customer_key + &quot; and valid_from = &apos;&quot; + test_date + &quot;&apos; order by customer_id, customer_key;&quot;;
var sqlCustomerPrevious = &quot;select customer_id, customer_key from dim_customer where &quot; + level_key_name + &quot; = &quot; + customer_key_prev + &quot; and valid_to = &apos;&quot; + test_date + &quot;&apos; order by customer_id, customer_key;&quot;;

var sqlLoanChanged = &quot;select loan_account_id, loan_account_key from dim_loan where &quot; + level_key_name + &quot; = &quot; + customer_key + &quot; and valid_from = &apos;&quot; + test_date + &quot;&apos; order by loan_account_id, loan_account_key;&quot;;
var sqlLoanPrevious = &quot;select loan_account_id, loan_account_key from dim_loan where &quot; + level_key_name + &quot; = &quot; + customer_key_prev + &quot; and valid_to = &apos;&quot; + test_date + &quot;&apos; order by loan_account_id, loan_account_key;&quot;;
 
var sqlSavingsChanged = &quot;select savings_account_id, savings_account_key from dim_savings where &quot; + level_key_name + &quot; = &quot; + customer_key + &quot; and valid_from = &apos;&quot; + test_date + &quot;&apos; order by savings_account_id, savings_account_key;&quot;;
var sqlSavingsPrevious = &quot;select savings_account_id, savings_account_key from dim_savings where &quot; + level_key_name + &quot; = &quot; + customer_key_prev + &quot; and valid_to = &apos;&quot; + test_date + &quot;&apos; order by savings_account_id, savings_account_key;&quot;;

var changedResults = fireToDB(DBConnection, sqlCustomerChanged);
var previousResults = fireToDB(DBConnection, sqlCustomerPrevious);

test_results(&quot;Customer&quot;);

if (wasError == &quot;N&quot;)
{
	changedResults = fireToDB(DBConnection, sqlLoanChanged);
	previousResults = fireToDB(DBConnection, sqlLoanPrevious);
	test_results(&quot;Loan Account&quot;);
}
if (wasError == &quot;N&quot;)
{
	changedResults = fireToDB(DBConnection, sqlSavingsChanged);
	previousResults = fireToDB(DBConnection, sqlSavingsPrevious);
	test_results(&quot;Savings Account&quot;);
}

</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>test_result</name>
        <rename>test_result</rename>
        <type>String</type>
        <length>4</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>fail_reason</name>
        <rename>fail_reason</rename>
        <type>String</type>
        <length>100</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>380</xloc>
      <yloc>217</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Failed?</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<send_true_to>Select values</send_true_to>
<send_false_to>Remove Test pass&#47;fail info</send_false_to>
    <compare>
<condition>
 <negated>N</negated>
 <leftvalue>test_result</leftvalue>
 <function>=</function>
 <rightvalue/>
 <value><name>constant</name><type>String</type><text>Fail</text><length>-1</length><precision>-1</precision><isnull>N</isnull><mask/></value> </condition>
    </compare>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>469</xloc>
      <yloc>21</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get Customer Entries for Change Type</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
function fail_test(msg)
{
	test_result = &quot;Fail&quot;;
	fail_reason = msg;
}

function customer_change_identified(row_num, customer_level_id, customer_status, group_key, center_key, loan_officer_key, branch_key, prev_customer_status, prev_group_key, prev_center_key, prev_loan_officer_key, prev_branch_key)
{

	int_customer_level_id = parseInt(customer_level_id);
	if ((customer_status == prev_customer_status) &amp;&amp; (group_key == prev_group_key) &amp;&amp; (center_key == prev_center_key) &amp;&amp; (loan_officer_key == prev_loan_officer_key) &amp;&amp; (branch_key == prev_branch_key))
	{
		fail_test(&quot;System Error - No Change found for entry: &quot; + row_num);
		return false;
	}


	change_is = &quot;none&quot;;

	if (change_is == &quot;none&quot;)
	{
		if (customer_status != prev_customer_status)
		{
			Alert(&quot;status&quot;);
			change_is = &quot;status&quot;;
		}
	}

	if (change_is == &quot;none&quot;)
	{
		if (branch_key != prev_branch_key)
		{
			Alert(&quot;branch&quot;);
			change_is = &quot;branch&quot;;
		}
	
	}

	if (change_is == &quot;none&quot;)
	{
		if (loan_officer_key != prev_loan_officer_key)
		{
			if (int_customer_level_id == 3)
			{
				change_is = &quot;center loan officer&quot;;
			}
			if (int_customer_level_id == 2 &amp;&amp; parseInt(center_key) == 0)
			{
					change_is = &quot;group loan officer&quot;;
			}
			if (int_customer_level_id == 1 &amp;&amp; parseInt(group_key) == 0)
			{
					change_is = &quot;client loan officer&quot;;
			}
		}
	}




	if (change_is == &quot;none&quot;)
	{
		fail_test(&quot;System Error - Was a Change but not picked up for entry: &quot; + row_num);
		return false;
	}

	if (change_is == test_change_type)
	{
		return true;
	}

}

function getCustomerValues()
{
	for (var i in sqlResults)
	{
&#47;&#47;check from 2nd entry onwards to identify the 1st entry that matches change type.
    	if (i &gt; 0)
		{
&#47;&#47;convert db date to string
			db_date = sqlResults[i][8] + &quot;&quot;;
			if (db_date == test_date)
			{
				if (customer_change_identified(i, sqlResults[i][1], sqlResults[i][2], sqlResults[i][3], sqlResults[i][4], sqlResults[i][5], sqlResults[i][6], sqlResults[i - 1][2], sqlResults[i - 1][3], sqlResults[i - 1][4], sqlResults[i - 1][5], sqlResults[i - 1][6]))
				{
					customer_key = sqlResults[i][0];
					customer_level_id = sqlResults[i][1];
					customer_key_prev = sqlResults[i - 1][0];
					return;
				}
				&#47;&#47;might have come back from customer_change_identified false and with a failure
				if (test_result == &quot;Fail&quot;)
				{
					return;
				}
			}
		}
	}
	fail_test(&quot;Change not found&quot;);
}


var test_result = &quot;Pass&quot;;
var fail_reason = &quot;&quot;;

var customer_key;
var customer_level_id;
var customer_key_prev;

var DBConnection = &quot;DestinationDB&quot;;
var sqlCustomer; 
sqlCustomer = &quot;select customer_key, customer_level_id, customer_status, group_key, center_key, loan_officer_key, branch_key &quot;;
sqlCustomer = sqlCustomer + &quot; , display_name, valid_from &quot;;
sqlCustomer = sqlCustomer + &quot; from dim_customer where customer_id = &quot; + test_customer_id;
sqlCustomer = sqlCustomer + &quot; order by customer_key&quot;;

var sqlResults = fireToDB(DBConnection, sqlCustomer);

getCustomerValues();



</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>test_result</name>
        <rename>test_result</rename>
        <type>String</type>
        <length>4</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>fail_reason</name>
        <rename>fail_reason</rename>
        <type>String</type>
        <length>100</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>customer_key</name>
        <rename>customer_key</rename>
        <type>Integer</type>
        <length>9</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>customer_level_id</name>
        <rename>customer_level_id</rename>
        <type>Integer</type>
        <length>4</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>customer_key_prev</name>
        <rename>customer_key_prev</rename>
        <type>Integer</type>
        <length>9</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>303</xloc>
      <yloc>22</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Remove Test pass&#47;fail info</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>        <select_unspecified>N</select_unspecified>
      <remove>        <name>test_result</name>
      </remove>      <remove>        <name>fail_reason</name>
      </remove>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>379</xloc>
      <yloc>107</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select values</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>test_name</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_customer_id</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_customer</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_date</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_change_type</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_result</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>fail_reason</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>589</xloc>
      <yloc>94</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select values 2</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>test_name</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_customer_id</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_customer</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_date</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_change_type</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>test_result</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>      <field>        <name>fail_reason</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>589</xloc>
      <yloc>217</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Set Test Variables</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>DestinationDB</connection>
    <sql>select 
&apos;center loan officer change&apos; as test_name,
32 as test_customer_id,
&apos;center with a LO change&apos; as test_customer, 
&apos;2010-07-27&apos; as test_date,
&apos;center loan officer&apos; as test_change_type</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>90</xloc>
      <yloc>18</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Test Case</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
if (test_result == &quot;Pass&quot;){	
	writeToLog(&quot;m&quot;, &quot;ETL Pass: &quot;+ test_name);
}
else
{
	writeToLog(&quot;e&quot;, &quot;ETL Fail: &quot;+ &quot;TEST NAME: &quot; + test_name + &quot; CUSTOMER ID&#47;NAME&#47;DATE: &quot; + test_customer_id + &apos;&#47;&apos; + test_customer + &apos;&#47;&apos; + test_date + &quot; CHANGE: &quot; + test_change_type  + &quot;: -&quot; + fail_reason);

}


</jsScript_script>
      </jsScript>    </jsScripts>    <fields>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>798</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
