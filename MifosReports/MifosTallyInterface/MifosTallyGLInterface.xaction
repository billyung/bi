<?xml version="1.0" encoding="UTF-8"?>
<action-sequence> 
  <title>Mifos - Tally GL Interface</title>
  <version>1</version>
  <logging-level>ERROR</logging-level>
  <documentation> 
    <author>John Woodlock</author>  
    <description>Empty blank action sequence document</description>  
    <help/>  
    <result-type/>  
    <icon/> 
  </documentation>

  <inputs> 
    <datefrom type="string"> 
      <sources> 
        <request>datefrom</request> 
      </sources>  
      <default-value><![CDATA[2010-02-15]]></default-value> 
    </datefrom>  
    <dateto type="string"> 
      <sources> 
        <request>dateto</request> 
      </sources>  
      <default-value/> 
    </dateto>  
    <overwrite type="string"> 
      <sources> 
        <request>overwrite</request> 
      </sources>  
      <default-value><![CDATA[No]]></default-value> 
    </overwrite>  
    <YesNo type="string-list"> 
      <sources> 
        <request>YesNo</request> 
      </sources>  
      <default-value type="string-list"> 
        <list-item>Yes</list-item>  
        <list-item>No</list-item> 
      </default-value> 
    </YesNo>  
    <runinterface type="string"> 
      <sources> 
        <request>runinterface</request> 
      </sources>  
      <default-value><![CDATA[Yes]]></default-value> 
    </runinterface> 
  </inputs>

  <outputs> 
    <report_output type="content"> 
      <destinations> 
        <response>content</response> 
      </destinations> 
    </report_output>  
    <Validation_Message type="string">
      <destinations/>
    </Validation_Message> 
  </outputs>

  <resources> 
    <report-definition> 
      <solution-file> 
        <location>reports/MifosTallyGLInterfaceReport.prpt</location>  
        <mime-type>application/zip</mime-type> 
      </solution-file> 
    </report-definition>  
    <transformation-file> 
      <solution-file> 
        <location>ExtractMifosGLData.ktr</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </transformation-file>  
    <transformation-file1> 
      <solution-file> 
        <location>CheckIfFileExists.ktr</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </transformation-file1>  
    <transformation-file2> 
      <solution-file> 
        <location>CreateTallyXML.ktr</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </transformation-file2> 
  </resources>
  
  <actions> 
    <action-definition> 
      <component-name>SecureFilterComponent</component-name>
      <action-type>Get Posted Date Range</action-type>
      <action-inputs> 
        <datefrom type="string"/>  
        <dateto type="string"/> 
      </action-inputs>
      <component-definition> 
        <selections> 
          <datefrom filter="none"> 
            <title>From Date:</title> 
          </datefrom>  
          <dateto filter="none" optional="true"> 
            <title>To Date:</title> 
          </dateto> 
        </selections> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>JavascriptRule</component-name>
      <action-type>Create Additional Parameters</action-type>
      <action-inputs> 
        <datefrom type="string"/>
        <dateto type="string"/>
      </action-inputs>
      <action-outputs> 
        <period type="string"/>  
        <filename type="string"/>  
        <calcdateto type="string"/>  
        <part_validation_message type="string"/>
      </action-outputs>
      <component-definition> 
        <script><![CDATA[function isValidDate(d) {
  if ( Object.prototype.toString.call(d) !== "[object Date]" )
    return false;
  return !isNaN(d.getTime());
}


period = datefrom
if ( dateto > "" ) period = period + "_to_" + dateto;

filename = "MifosAccountingExport-" + period + ".xml";

calcdateto = dateto;
if ( dateto == "" ) calcdateto = datefrom;

dDatefrom = new Date(datefrom.replace("/",'A').replace(/-/g,'/'));
dDateto = new Date(calcdateto.replace("/",'A').replace(/-/g,'/'));
dToday = new Date();
part_validation_message = "";

if ((part_validation_message == "") && (!isValidDate(dDatefrom))) part_validation_message = "From Date: " + datefrom + " does not have correct date format (yyyy-mm-dd)";
if ((part_validation_message == "") && (!isValidDate(dDateto))) part_validation_message = "To Date: " + dateto + " does not have correct date format (yyyy-mm-dd)";
if ((part_validation_message == "") && (dDatefrom > dDateto)) part_validation_message = "From Date: " + datefrom + "<br><br> is after <br><br>To Date: " + dateto;
if ((part_validation_message == "") && (dDatefrom > dToday)) part_validation_message = "From Date: " + datefrom + " is after today";
if ((part_validation_message == "") && (dDateto > dToday)) part_validation_message = "To Date: " + dateto + " is after today";]]></script>
      </component-definition> 
    </action-definition>

    <actions> 
      <condition><![CDATA[!( part_validation_message == '')]]></condition>  
      <action-definition> 
        <component-name>TemplateComponent</component-name>
        <action-type>From Date After To Date</action-type>
        <action-inputs>
          <part_validation_message type="string"/>
        </action-inputs>
        <action-outputs> 
          <output-message type="string" mapping="Validation_Message"/> 
        </action-outputs>
        <component-definition> 
          <template><![CDATA[<br>
<br>
<br>The interface has not run due to the following validation problem:
<br>
<font color='red'><br>{part_validation_message}</font>
<br>
<br>Please run the interface again
<br>]]></template> 
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[( part_validation_message == '')]]></condition>  
      <action-definition> 
        <component-name>KettleComponent</component-name>
        <action-type>Check If Output File Already Exists</action-type>
        <action-inputs> 
          <filename type="string"/> 
        </action-inputs>
        <action-resources> 
          <transformation-file type="resource" mapping="transformation-file1"/> 
        </action-resources>
        <action-outputs> 
          <transformation-output-rows type="result-set" mapping="file_exists_query_result"/> 
        </action-outputs>
        <component-definition> 
          <monitor-step><![CDATA[Final Result]]></monitor-step> 
        </component-definition> 
      </action-definition>
  
      <actions> 
        <condition><![CDATA[file_exists_query_result.getValueAt(0,0)]]></condition>  
        <action-definition> 
          <component-name>SecureFilterComponent</component-name>
          <action-type>Overwrite Existing File or Not</action-type>
          <action-inputs> 
            <overwrite type="string"/>  
            <YesNo type="string-list"/> 
          </action-inputs>
          <component-definition> 
            <selections> 
              <overwrite> 
                <title>File Already Exists - Do you want to Overwrite it?</title>  
                <filter>YesNo</filter> 
              </overwrite> 
            </selections> 
          </component-definition> 
        </action-definition>
  
        <action-definition> 
          <component-name>JavascriptRule</component-name>
          <action-type>Abort if Not to Overwrite</action-type>
          <action-inputs> 
            <overwrite type="string"/> 
          </action-inputs>
          <action-outputs> 
            <runinterface type="string"/> 
          </action-outputs>
          <component-definition> 
            <script><![CDATA[runinterface = overwrite;]]></script> 
          </component-definition> 
        </action-definition>
 
      </actions>
  
      <actions> 
        <condition><![CDATA[runinterface == 'No']]></condition>  
        <action-definition> 
          <component-name>JavascriptRule</component-name>
          <action-type>JavaScript</action-type>
          <action-outputs> 
            <report_output type="string"/> 
          </action-outputs>
          <component-definition> 
            <script><![CDATA[report_output = 'Mifos GL Interface Report Aborted';]]></script> 
          </component-definition> 
        </action-definition>
 
      </actions>
  
      <actions> 
        <condition><![CDATA[runinterface == 'Yes']]></condition>  
        <action-definition> 
          <component-name>KettleComponent</component-name>
          <action-type>Extract Mifos GL Data</action-type>
          <action-inputs> 
            <datefrom type="string"/>  
            <calcdateto type="string"/> 
          </action-inputs>
          <action-resources> 
            <transformation-file type="resource" mapping="transformation-file"/> 
          </action-resources>
          <action-outputs> 
            <transformation-output-rows type="result-set" mapping="queryresult"/> 
          </action-outputs>
          <component-definition> 
            <monitor-step><![CDATA[customisedextract]]></monitor-step> 
          </component-definition> 
        </action-definition>
  
        <action-definition> 
          <component-name>KettleComponent</component-name>
          <action-type>Pentaho Data Integration</action-type>
          <action-inputs> 
            <filename type="string"/> 
          </action-inputs>
          <action-resources> 
            <transformation-file type="resource" mapping="transformation-file2"/> 
          </action-resources>
          <component-definition/> 
        </action-definition>
  
        <action-definition> 
          <component-name>SimpleReportingComponent</component-name>
          <action-type>Tally GL Interface Report</action-type>
          <action-inputs> 
            <queryresult type="result-set"/>  
            <filename type="string"/>  
            <period type="string"/> 
          </action-inputs>
          <action-outputs> 
            <outputstream type="content" mapping="report_output"/> 
          </action-outputs>
          <component-definition> 
            <outputType><![CDATA[application/pdf]]></outputType> 
          </component-definition> 
        </action-definition>
 
      </actions>
 
    </actions>
 
  </actions> 
</action-sequence>