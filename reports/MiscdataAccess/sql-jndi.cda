<?xml version="1.0" encoding="utf-8"?>
<CDADescriptor>
    <DataSources>
        <Connection id="1" type="sql.jndi">
            <Jndi>SourceDB</Jndi>
        </Connection>
    </DataSources>


    <DataAccess id="getCustomerIdFromCustomerName" connection="1" type="sql" access="public" cache="false" cacheDuration="3600">
        <Name>Get Customer Id From Customer Name</Name>
        <Query>
(select "-5", "---Select One---" as customer_name)
union all
(select cast(c.customer_id as char) as customer_id, cast(concat( c.display_name, " - ", lv.lookup_name, " (", c.global_cust_num, ")") as char) as customer_name
from customer c
left join customer_state cs on cs.status_id = c.status_id
left join lookup_value lv on lv.lookup_id = cs.status_lookup_id
where display_name like concat("%", ${customerName}, "%") and display_name > ""
order by 2);
	</Query>
        <Parameters>
            <Parameter name="customerName" type="String" default="; ;"/>
        </Parameters>
    </DataAccess>


    <DataAccess id="getCustomerIdFromGovernmentId" connection="1" type="sql" access="public" cache="false" cacheDuration="3600">
        <Name>Get Customer Id From Government Id</Name>
        <Query>
(select "-5", "---Select One---" as customer_name)
union all
(select cast(c.customer_id as char) as customer_id, cast(concat( c.display_name, " - ", lv.lookup_name, " (", c.global_cust_num, ")") as char) as customer_name
from customer c
left join customer_state cs on cs.status_id = c.status_id
left join lookup_value lv on lv.lookup_id = cs.status_lookup_id
where government_id = ${governmentId} and government_id > ""
order by 2);
	</Query>
        <Parameters>
            <Parameter name="governmentId" type="String" default="; ;"/>
        </Parameters>
    </DataAccess>


    <DataAccess id="getCustomerIdFromExternalId" connection="1" type="sql" access="public" cache="false" cacheDuration="3600">
        <Name>Get Customer Id From External Id</Name>
        <Query>
(select "-5", "---Select One---" as customer_name)
union all
(select cast(c.customer_id as char) as customer_id, cast(concat( c.display_name, " - ", lv.lookup_name, " (", c.global_cust_num, ")") as char) as customer_name
from customer c
left join customer_state cs on cs.status_id = c.status_id
left join lookup_value lv on lv.lookup_id = cs.status_lookup_id
where external_id = ${externalId} and external_id > ""
order by 2);
	</Query>
        <Parameters>
            <Parameter name="externalId" type="String" default="; ;"/>
        </Parameters>
    </DataAccess>


    <DataAccess id="getAccountListForCustomer" connection="1" type="sql" access="public" cache="false" cacheDuration="3600">
        <Name>Get Account List For Customer</Name>
        <Query>
select * from
((select -5 as account_id, "---Select One---" as account_name)
union all
(select a.account_id, 
concat("Loan: ", po.prd_offering_name, " - ", lv.lookup_name, " (", a.global_account_num, ")") as account_name 
from account a 
join loan_account la on la.account_id = a.account_id
join prd_offering po on po.prd_offering_id = la.prd_offering_id
left join account_state ast on ast.account_state_id = a.account_state_id
left join lookup_value lv on lv.lookup_id = ast.lookup_id
where a.customer_id = ${customerId})
union all
(select a.account_id, 
concat("Savings: ", po.prd_offering_name, " - ", lv.lookup_name, " (", a.global_account_num, ")") as account_name 
from account a 
join savings_account la on la.account_id = a.account_id
join prd_offering po on po.prd_offering_id = la.prd_offering_id
left join account_state ast on ast.account_state_id = a.account_state_id
left join lookup_value lv on lv.lookup_id = ast.lookup_id
where a.customer_id = ${customerId})) a

order by 2;        
	</Query>
        <Parameters>
            <Parameter name="customerId" type="Integer" default="-5"/>
        </Parameters>
    </DataAccess>



    <DataAccess id="getSavingsAccountStatement" connection="1" type="sql" access="public" cache="false" cacheDuration="3600">
        <Name>Get Savings Account Statement</Name>
        <Query>
<![CDATA[
(select cast(date(${startDate}) as char) as "Txn Date", "Opening Balance" as "Txn Type",
"" as "Payment", "" as "Receipt No.", "" as "Receipt Date", 
"" as "Money Out", "" as "Money In", 
cast(ifnull(round(sum(stxn.deposit_amount + stxn.interest_amount - stxn.withdrawal_amount),4),0.0) as char) as "Balance"
from account_trxn atxn
join savings_trxn_detail stxn on atxn.account_trxn_id = stxn.account_trxn_id
where atxn.account_id = ${accountId}
and atxn.action_date < ${startDate})

union all
(select cast(atxn.action_date as char) as "Txn Date",
CASE atxn.account_action_id
    WHEN 6 THEN "Deposit"
    WHEN 7 THEN "Withdrawal"
    WHEN 11 THEN "Interest Posting"
    WHEN 14 THEN "Adjustment"
    ELSE cast(concat("Unknown Action: ", atxn.account_action_id) as char)
END as "Txn Type",
ifnull(ptlvl.lookup_value, substring(ptlv.lookup_name,13)) as "Payment",
ifnull(ap.receipt_number,"") as "Receipt No.", cast(ifnull(ap.receipt_date,"") as char) as "Receipt Date", 
CASE atxn.account_action_id
    WHEN 7 THEN 
        cast(round(stxn.withdrawal_amount, 4) as char) 
    WHEN 14 THEN 
        CASE arev.account_action_id
            WHEN 7 THEN  cast(round(stxn.withdrawal_amount, 4) as char) 
            ELSE ""  
        END
    ELSE ""
END as "Money Out",
CASE atxn.account_action_id
    WHEN 6 THEN  cast(round(stxn.deposit_amount, 4) as char) 
    WHEN 11 THEN cast(round(stxn.interest_amount, 4) as char) 
    WHEN 14 THEN 
        CASE arev.account_action_id
            WHEN 6 THEN  cast(round(stxn.deposit_amount, 4) as char) 
            WHEN 11 THEN cast(round(stxn.interest_amount, 4) as char)    
            ELSE ""
        END
    ELSE ""
END as "Money In", 
"" as Balance
from account_trxn atxn
join savings_trxn_detail stxn on atxn.account_trxn_id = stxn.account_trxn_id
join account_payment ap on ap.payment_id = atxn.payment_id
left join account_action aa on aa.account_action_id = atxn.account_action_id
left join lookup_value aalv on aalv.lookup_id = aa.lookup_id
left join payment_type pt on pt.payment_type_id = ap.payment_type_id
left join lookup_value ptlv on ptlv.lookup_id = pt.payment_type_lookup_id
left join lookup_value_locale ptlvl on ptlvl.lookup_id = ptlv.lookup_id 
left join account_trxn arev on arev.account_trxn_id = atxn.related_trxn_id
where atxn.account_action_id in (6,7, 11, 14)   
and atxn.action_date between ${startDate} and ${endDate}
and atxn.account_id = ${accountId}

order by atxn.action_date, atxn.account_trxn_id)
union all
(select cast(date(${endDate}) as char) as "Txn Date", "Closing Balance" as "Txn Type",
"" as "Payment", "" as "Receipt No.", "" as "Receipt Date", 
"" as "Money Out", "" as "Money In", 
cast(ifnull(round(sum(stxn.deposit_amount + stxn.interest_amount - stxn.withdrawal_amount),4),0.0) as char) as "Balance"
from account_trxn atxn
join savings_trxn_detail stxn on atxn.account_trxn_id = stxn.account_trxn_id
where atxn.account_id = ${accountId}
and atxn.action_date < date_add(${endDate}, interval 1 day))
]]>
        </Query>
        <Parameters>
    		<Parameter name="startDate" type="Date" pattern="yyyy-MM-dd" default="1900-01-01"/>
    		<Parameter name="endDate" type="Date" pattern="yyyy-MM-dd" default="3000-01-01"/>
            <Parameter name="accountId" type="Integer" default="2846"/>
        </Parameters>

    </DataAccess>





</CDADescriptor>
