<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>ppi-gen-sqlOld</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
        <parameter>
            <name>endDate</name>
            <default_value/>
            <description/>
        </parameter>
        <parameter>
            <name>startDate</name>
            <default_value/>
            <description/>
        </parameter>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user/>
  <created_date>2011&#47;02&#47;04 10:11:07.429</created_date>
  <modified_user>-</modified_user>
  <modified_date>2010&#47;11&#47;26 18:30:27.578</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>Select likelihood band data for all Operation surveys and determine which columns are not null.
Generate the PPI Data Dump SQL and only include the non-null likelihood bands.</note>
      <xloc>551</xloc>
      <yloc>309</yloc>
      <width>530</width>
      <heigth>36</heigth>
      <fontname>Microsoft Sans Serif</fontname>
      <fontsize>8</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>connection</name>
    <server/>
    <type>GENERIC</type>
    <access>Native</access>
    <database/>
    <port>1521</port>
    <username>${JDBC_USER}</username>
    <password>${JDBC_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>CUSTOM_DRIVER_CLASS</code><attribute>${JDBC_DRIVER}</attribute></attribute>
      <attribute><code>CUSTOM_URL</code><attribute>${JDBC_URL}</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>DestinationDB</name>
    <server/>
    <type>MYSQL</type>
    <access>JNDI</access>
    <database>DestinationDB</database>
    <port>1521</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>wcm</name>
    <server>localhost</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>wcm</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce7dc781bed6</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>3306</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Select all likelihood bands for Operational Surveys</from><to>Identify Non-null PPILines</to><enabled>Y</enabled> </hop>  <hop> <from>Identify Non-null PPILines</from><to>Select PPILines</to><enabled>Y</enabled> </hop>  <hop> <from>Select PPILines</from><to>Split field to rows</to><enabled>Y</enabled> </hop>  <hop> <from>Split field to rows</from><to>Select PPILine</to><enabled>Y</enabled> </hop>  <hop> <from>Group by for Final Column List</from><to>Create SQL</to><enabled>Y</enabled> </hop>  <hop> <from>Select PPILine</from><to>Filter Blanks</to><enabled>Y</enabled> </hop>  <hop> <from>Filter Blanks</from><to>Unique rows (HashSet)</to><enabled>Y</enabled> </hop>  <hop> <from>Unique rows (HashSet)</from><to>Set Column Headings for PPI Lines</to><enabled>Y</enabled> </hop>  <hop> <from>Set Column Headings for PPI Lines</from><to>Group by for Final Column List</to><enabled>Y</enabled> </hop>  <hop> <from>Create SQL</from><to>Set Variables</to><enabled>Y</enabled> </hop>  <hop> <from>Set Variables</from><to>SQL Output</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Create SQL</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
var SQL = &apos;SELECT cast(cust.display_name as char) AS &quot;Customer Name&quot;, cast(cust.customer_id as unsigned) AS &quot;Customer Id&quot;, cast(ppi.date_survey_taken as char) AS &quot;Date Survey Taken&quot;, &apos;;
SQL = SQL + &apos;cast(dw_survey.survey_name as char) AS &quot;Survey Name&quot;, cast(office.display_name as char) AS &quot;Branch&quot;, cast(start_cust.start_date as char) as &quot;Start Date&quot;, &apos;;
SQL = SQL + &apos;cast(disb.prd_offering_name as char) as &quot;Loan Product Type&quot;, cast(disb.initial_loan_amount as char) as &quot;Initial Loan Amount&quot;, &apos;;
SQL = SQL + &apos;cast(savings.total_savings_balance as char) as &quot;Savings Balance&quot;, &apos;;
SQL = SQL + &quot;IFNULL(SUBSTRING_INDEX(cust.gender,&apos;-&apos;,-1), &apos;&apos;) AS Gender, &quot;;
SQL = SQL + &quot;IFNULL(SUBSTRING_INDEX(SUBSTRING_INDEX(cust.business_activity,&apos;.&apos;,-2 ), &apos;.&apos;, 1), &apos;&apos;) as &quot; + &apos;&quot;Business Activity&quot;, &apos;;
SQL = SQL + &apos;cast(arrears.principal_in_arrears as char) as &quot;Principal in Arrears&quot;, &apos;;
SQL = SQL + &apos;cast(cust.num_children as char) as &quot;Number of Children&quot;, &apos;;
SQL = SQL + &quot;IFNULL(SUBSTRING_INDEX(SUBSTRING_INDEX(cust.education_level,&apos;.&apos;,-2 ), &apos;.&apos;, 1), &apos;&apos;) as &quot; + &apos;&quot;Education Level&quot;, &apos;;
SQL = SQL + &quot;IFNULL(SUBSTRING_INDEX(SUBSTRING_INDEX(cust.ethnicity,&apos;.&apos;,-2 ), &apos;.&apos;, 1), &apos;&apos;) as Ethnicity, &quot;;
SQL = SQL + &apos;     cast(cust.date_of_birth as char) as &quot;Date of Birth&quot;, cast(ppi.ppi_score as unsigned) AS &quot;PPI Score&quot;, paramColumnList &apos;;
SQL = SQL + &apos;from ppi_category_likelihood_bands cat &apos;;
SQL = SQL + &apos;join dw_ppi_survey dw_survey on cat.ppi_survey = dw_survey.survey_name &apos;;
SQL = SQL + &apos;join fact_ppi_survey_results ppi on ppi.survey_id = dw_survey.survey_id &apos;;
SQL = SQL + &apos;                                            and ppi.ppi_score &gt;= cat.lower_bound &apos;;
SQL = SQL + &apos;                                            and ppi.ppi_score &lt;= cat.upper_bound &apos;;
SQL = SQL + &apos;join dim_customer cust on cust.customer_key = ppi.customer_key &apos;;
SQL = SQL + &apos;join dim_office office on ppi.branch_key = office.office_key &apos;;
SQL = SQL + &apos;left join &apos;;
SQL = SQL + &apos;    (select c.customer_id as customer_id, sum(hla.principal_in_arrears) as principal_in_arrears &apos;;
SQL = SQL + &apos;    from dim_customer c &apos;;
SQL = SQL + &apos;    join hist_loan_arrears as hla on c.customer_id = hla.customer_id &apos;;
SQL = SQL + &apos;                                        and hla.as_of_date = paramEndDate &apos;;
SQL = SQL + &apos;    join fact_ppi_survey_results ppi on ppi.customer_key = c.customer_key   &apos;;
SQL = SQL + &apos;                                        and ppi.date_survey_taken between paramStartDate and paramEndDate  &apos;;
SQL = SQL + &apos;                                        and ppi.ppi_results_id =  &apos;;
SQL = SQL + &apos;                                            (select min(ppimin.ppi_results_id)  &apos;;
SQL = SQL + &apos;                                            from fact_ppi_survey_results ppimin &apos;;
SQL = SQL + &apos;                                            where ppimin.customer_key = c.customer_key &apos;;
SQL = SQL + &apos;                                            and ppimin.date_survey_taken between paramStartDate and paramEndDate ) &apos;;
SQL = SQL + &apos;    group by c.customer_id) arrears on arrears.customer_id = cust.customer_id &apos;;
SQL = SQL + &apos;left join &apos;;
SQL = SQL + &apos;    (select c.customer_id as customer_id, sum(balance) as total_savings_balance &apos;;
SQL = SQL + &apos;    from dim_customer c &apos;;
SQL = SQL + &apos;    join hist_savings_balances  hsb on hsb.as_of_date = paramEndDate and hsb.customer_id = c.customer_id &apos;;
SQL = SQL + &apos;    join fact_ppi_survey_results ppi on ppi.customer_key = c.customer_key   &apos;;
SQL = SQL + &apos;                                        and ppi.date_survey_taken between paramStartDate and paramEndDate  &apos;;
SQL = SQL + &apos;                                        and ppi.ppi_results_id =  &apos;;
SQL = SQL + &apos;                                            (select min(ppimin.ppi_results_id)  &apos;;
SQL = SQL + &apos;                                            from fact_ppi_survey_results ppimin &apos;;
SQL = SQL + &apos;                                            where ppimin.customer_key = c.customer_key &apos;;
SQL = SQL + &apos;                                            and ppimin.date_survey_taken between paramStartDate and paramEndDate ) &apos;;
SQL = SQL + &apos;    group by c.customer_id) savings on savings.customer_id = cust.customer_id &apos;;
SQL = SQL + &apos;left join &apos;;
SQL = SQL + &apos;    (select c.customer_id as customer_id, min(full_cust.valid_from) as start_date &apos;;
SQL = SQL + &apos;    from dim_customer c &apos;;
SQL = SQL + &apos;    join dim_customer full_cust on c.customer_id = full_cust.customer_id &apos;;
SQL = SQL + &apos;    join fact_ppi_survey_results ppi on ppi.customer_key = c.customer_key  &apos;;
SQL = SQL + &apos;                                        and ppi.date_survey_taken between paramStartDate and paramEndDate  &apos;;
SQL = SQL + &quot;    where full_cust.customer_status = &apos;ClientStatus-Active&apos; &quot;;
SQL = SQL + &apos;    group by c.customer_id) start_cust on start_cust.customer_id = cust.customer_id &apos;;
SQL = SQL + &apos;left join &apos;;
SQL = SQL + &apos;    (select distinctrow c.customer_id as customer_id, p.prd_offering_name, disb.disbursal_amount as initial_loan_amount &apos;;
SQL = SQL + &apos;    from dim_customer c &apos;;
SQL = SQL + &apos;    join fact_loan_disbursals disb on  disb.account_trxn_id = &apos;;
SQL = SQL + &apos;                                                    (select min(first_disb.account_trxn_id) &apos;;
SQL = SQL + &apos;                                                    from fact_loan_disbursals first_disb &apos;;
SQL = SQL + &apos;                                                    join dim_customer full_cust on full_cust.customer_key = first_disb.customer_key &apos;;
SQL = SQL + &apos;                                                    where full_cust.customer_id = c.customer_id &apos;;
SQL = SQL + &apos;                                                    and first_disb.reversed is false &apos;;
SQL = SQL + &apos;                                                    and first_disb.account_action_id = 10) &apos;;
SQL = SQL + &apos;    join dim_product p on p.product_key = disb.product_key &apos;;
SQL = SQL + &apos;    join fact_ppi_survey_results ppi on ppi.customer_key = c.customer_key  &apos;;
SQL = SQL + &apos;                and ppi.date_survey_taken between paramStartDate and paramEndDate ) disb on disb.customer_id = cust.customer_id &apos;;
SQL = SQL + &apos;where ppi.date_survey_taken between paramStartDate and paramEndDate &apos;;
SQL = SQL + &apos;order by cust.display_name, ppi.date_survey_taken &apos;;

startD = &quot;&apos;&quot; + getVariable(&quot;startDate&quot;, &quot;&quot;) + &quot;&apos;&quot;;
endD = &quot;&apos;&quot; + getVariable(&quot;endDate&quot;, &quot;&quot;) + &quot;&apos;&quot;;

SQL = replace(SQL, &quot;paramColumnList&quot;, columnList);
SQL = replace(SQL, &quot;paramStartDate&quot;, startD);
SQL = replace(SQL, &quot;paramEndDate&quot;, endD);

&#47;&#47;setVariable(&apos;SQL&apos;, SQL, &apos;s&apos;);

&#47;&#47; writeToLog(SQL);
&#47;&#47;Alert(SQL);


</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>SQL</name>
        <rename>SQL</rename>
        <type>String</type>
        <length>6000</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>232</xloc>
      <yloc>147</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Filter Blanks</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
<send_true_to/>
<send_false_to/>
    <compare>
<condition>
 <negated>N</negated>
 <leftvalue>PPILine</leftvalue>
 <function>&gt;=</function>
 <rightvalue/>
 <value><name>constant</name><type>String</type><text>&quot;&quot;</text><length>-1</length><precision>-1</precision><isnull>N</isnull><mask/></value> </condition>
    </compare>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>863</xloc>
      <yloc>148</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Group by for Final Column List</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>%%java.io.tmpdir%%</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>N</give_back_row>
      <group>
      </group>
      <fields>
        <field>
          <aggregate>columnList</aggregate>
          <subject>PPIColumnHeading</subject>
          <type>CONCAT_COMMA</type>
          <valuefield/>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>364</xloc>
      <yloc>146</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Identify Non-null PPILines</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var idx = getInputRowMeta().indexOfValue(&quot;ppi_survey&quot;);
if ( idx &lt; 0 )
{
   var lookupValue = 0;
}
else
{
   var lookupValue = row[idx];
} 
 

var i;
var valueMeta;
var PPILines = &quot;&quot;;
for (i=0;i&lt;getInputRowMeta().size();i++)
{
	valueMeta = getInputRowMeta().getValueMeta(i);
	if (valueMeta.getTypeDesc().equals(&quot;Number&quot;)) {
		if(!(row[i]==null)) {
			PPILines = PPILines + valueMeta.getName() + &quot;;&quot;;
		}
	}
}</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>PPILines</name>
        <rename>PPILines</rename>
        <type>String</type>
        <length>4000</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>348</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>SQL Output</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>SQL</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>69</xloc>
      <yloc>151</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select PPILine</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>PPILine</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>858</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select PPILines</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      <field>        <name>PPILines</name>
        <rename/>
        <length>-2</length>
        <precision>-2</precision>
      </field>        <select_unspecified>N</select_unspecified>
    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>499</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Select all likelihood bands for Operational Surveys</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>DestinationDB</connection>
    <sql>select b.* 
from dw_ppi_survey s 
join ppi_category_likelihood_bands b on b.ppi_survey = s.survey_name and b.lower_bound = 0 
where s.survey_id is not null
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>116</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Set Column Headings for PPI Lines</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>
var PPIColumnHeading = &quot;cast(&quot; + PPILine + &apos; as char) as &quot;&apos; + replace(PPILine, &quot;_&quot;, &quot; &quot;) + &apos;&quot;&apos;; 

&#47;&#47;Alert(PPIColumnHeading);</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>PPIColumnHeading</name>
        <rename>PPIColumnHeading</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>547</xloc>
      <yloc>146</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Set Variables</name>
    <type>SetVariable</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>
      <field>
        <field_name>columnList</field_name>
        <variable_name>COLUMNLIST</variable_name>
        <variable_type>JVM</variable_type>
        <default_value/>
        </field>
      <field>
        <field_name>SQL</field_name>
        <variable_name>SQL</variable_name>
        <variable_type>JVM</variable_type>
        <default_value/>
        </field>
      </fields>
    <use_formatting>Y</use_formatting>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>155</xloc>
      <yloc>251</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Split field to rows</name>
    <type>SplitFieldToRows3</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
   <splitfield>PPILines</splitfield>
   <delimiter>;</delimiter>
   <newfield>PPILine</newfield>
   <rownum>N</rownum>
   <rownum_field/>
   <resetrownumber>Y</resetrownumber>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>693</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Unique rows (HashSet)</name>
    <type>UniqueRowsByHashSet</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <store_values>N</store_values>
      <reject_duplicate_row>N</reject_duplicate_row>
      <error_description/>
    <fields>      <field>        <name>PPILine</name>
        </field>      </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>701</xloc>
      <yloc>148</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
